{"version":3,"sources":["index.js"],"names":["Converter","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","Editor","render","inputText","Preview","props","_useState","useState","data","_useState2","Object","C_Users_Chris_Lissman_Desktop_portfolio_projects_markdown_previewer_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setInputText","Fragment","onChange","e","target","value","id","dangerouslySetInnerHTML","__html","marked","ReactDOM","document","getElementById"],"mappings":"yNAOA,SAASA,IACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACE,EAAD,CAAQC,OAAQ,SAAAC,GAAS,OACrBN,EAAAC,EAAAC,cAACK,EAAD,CAASD,UAAWA,QAMpC,SAASF,EAAOI,GAAO,IAAAC,EACeC,mBAASC,GADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACZH,EADYM,EAAA,GACDG,EADCH,EAAA,GAMnB,OACIZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACAhB,EAAAC,EAAAC,cAAA,YAAUe,SALO,SAACC,GAClBH,EAAaG,EAAEC,OAAOC,QAIYA,MAAOd,IACxCE,EAAMH,OAAOC,IAKtB,SAASC,EAAQC,GAKb,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,UAAUC,wBALf,CAAEC,OAAQC,IAAOhB,EAAMF,eAoBtC,IAAMK,EACF,ivBAOJc,IAASpB,OAAOL,EAAAC,EAAAC,cAlBhB,WACI,OACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAImB,GAAG,SAAP,sBACArB,EAAAC,EAAAC,cAAA,MAAImB,GAAG,YAAP,iDACArB,EAAAC,EAAAC,cAACH,EAAD,QAaI,MAAqB2B,SAASC,eAAe","file":"static/js/main.1f304dd1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport marked from 'marked'\n\n//break up components, style, test, accessibility, title, etc.\n\nfunction Converter() {\n    return (\n        <div className=\"Markdown\">\n            <Editor render={inputText => (\n                <Preview inputText={inputText} />\n            )}/>\n        </div>\n    )\n}\n\nfunction Editor(props) {\n    const [inputText, setInputText] = useState(data)\n\n    const handleChange = (e) => {\n        setInputText(e.target.value)\n    }\n    return (\n        <>\n        <textarea onChange={handleChange} value={inputText}></textarea>\n        {props.render(inputText)}\n        </>\n    )\n}\n\nfunction Preview(props) {\n    const passHtml = () => {\n        return { __html: marked(props.inputText) }\n    }\n    \n    return (\n        <div className=\"Preview\">\n            <div id=\"display\" dangerouslySetInnerHTML={passHtml()} />\n        </div>\n    )\n}\n\nfunction MarkdownPreview() {\n    return (\n        <div className=\"App\">\n            <h1 id=\"Title\">Markdown Previewer</h1>\n            <h2 id=\"Subtitle\">A freeCodeCamp project using Marked and React</h2>\n            <Converter />\n        </div>\n    );\n}\n\nconst data = (\n    \"# Earum \\n\\nLorem ipsum dolor sit **amet** consectetur adipisicing elit. \\n\\n ```js\\nconst myFunction() {return console.log('Hi!')}\\n``` \\n\\n[Free Code Camp](https://freecodecamp.com)\\n\\nDolor sit amet _consectetur_ adipisicing elit. Officia pariatur hic nemo, ullam ~~laboriosam~~ soluta mollitia tenetur voluptatibus. \\n\\nList: \\n\\n * One \\n * Two \\n * Three\\n\\nDignissimos, saepe porro totam vel animi, natus alias provident rerum incidunt. \\n\\n ## Nesciunt \\n\\nCommodi cum, quod at tempora obcaecati nam, rem tenetur pariatur voluptas nobis nihil neque fuga nisi ut magnam maxime, itaque facere.  \\n\\n Ex placeat? Earum, architecto voluptatem natus debitis voluptas dolore, quas, quaerat officiis vitae ullam placeat at quod eveniet harum in nam!\"\n)\n\n\n\n\n\nReactDOM.render(<MarkdownPreview />, document.getElementById('root'));\n\n"],"sourceRoot":""}